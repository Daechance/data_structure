#include <stdio.h>
#include <stdlib.h>

#define MAX_STACK_SIZE 20
#define MAX_NAME_SIZE 20
#define MAX_EXPR_LEN 80

typedef enum {
	lparen, rparen, plus, minus, times, divide,
	mod, eos, operand } precedence;

char expr[MAX_EXPR_LEN];  
int stack[MAX_STACK_SIZE];
int top = -1;

void stackfull()
{
	fprintf(stderr," stack if full cannot add element!\n");
	exit(EXIT_FAILURE);
}

void push(int itme)
{
	if( top >= MAX_STACK_SIZE -1)
		stackfull();
	
	stack[++top] = itme;
}

int stackEmpty()
{
	fprintf(stderr, "stack is empty, cannot delete elements!!\n");
	int err;
	exit(EXIT_FAILURE);
	return err;
}

int pop()
{
	if( top == -1)
		stackEmpty();
	
	return stack[top--];
}

precedence getToken(char *symbol, int *n)
{
	*symbol = expr[(*n)++];
	switch (*symbol){
		case '(': return lparen;
		case ')':  return rparen;
		case '+': return plus;
		case '-': return minus;
		case '/': return divide;
		case '*': return times;
		case '%': return mod;
		case '\0': return eos;
		default: return operand; //나머지는 숫자
	}
}

int eval()
{
	precedence token;
	char symbol;
	int op1, op2;
	int n = 0; /* counter for the expression string */
	top = -1;
	token = getToken(&symbol, &n);

	while (token != eos)
	{
		if (token == operand){
			push(symbol-'0'); //아스키 코드 변환
		}else {
			op2 = pop();	
			op1 = pop();

			switch(token) {
				case plus:
					push(op1 + op2);
					break;
				case minus:
					push(op1 - op2);
					break;
				case times:
					push(op1 * op2);
					break;
				case divide:
					push(op1 / op2);
					break;
				case mod:
					push(op1 % op2);
			}
		}
		token = getToken(&symbol, &n);
	}
	return pop(); /* return result */
}

int main(void)
{
	FILE *fp = fopen("input.txt","r");
	fgets(expr, MAX_EXPR_LEN, fp);

	printf("postfix sexpression : %s\n",expr);

	int a = eval();

	printf("the evalution value : %d \n", a);

	fclose(fp);

	return 0;
}

//gangdaechan@gangdaechan-ui-MacBookPro test % cc main.c -o main
//main.c:79:11: warning: 4 enumeration values not handled in switch: 'lparen', 'rparen', 'eos'... [-Wswitch]
//                        switch(token) {
//                               ^
//main.c:79:11: note: add missing switch cases
//                        switch(token) {
//                               ^
//1 warning generated.
//gangdaechan@gangdaechan-ui-MacBookPro test % ./main
//postfix sexpression : 82/3-42*+
//the evalution value : 9 
//gangdaechan@gangdaechan-u
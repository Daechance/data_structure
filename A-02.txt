/*
#include <stdio.h>
#include <stdlib.h>   

int *func1();
void func2(int *pNUM);
void func3(int **pNUM);

int main()
{
    int *pNUM;
    pNUM = func1();    // int 크기만큼 동적할당 받아 10을 지정후 정수형 포인터 리턴
    printf("%d\n", *pNUM);    // 10: 메모리를 해제하기 전까지 안전함


	func2(pNUM);// pNum이 가리키는 것을 100으로 수정
	printf("%d\n", *pNUM);

	func3(&pNUM); // pNum이 가리키는 것을 200으로 수정 
	printf("%d\n", *pNUM);
	free(pNUM);

	return 0;
}

int *func1()    // int 포인터를 반환하는 ten 함수 정의
{
    int *pNUM = (int*)malloc(sizeof(int));    // int 크기만큼 동적 메모리 할당
    *pNUM = 10;    // 역참조로 10 저장

    return pNUM; 
}

void func2(int *pNUM)
{
	*pNUM = 100;
}
void func3(int **pNUM)
{
	**pNUM = 200;
}

*/


//a3


#include <stdio.h>
#include <time.h>

int main(void)
{
	int i, n, step  = 10;
	double duration;

	FILE * fp =fopen("output.csv","w");
	fprintf(fp,"n,repetitions,time\n");

	for(n = 0;n <= 100000; n += step)
	{
		long repetitions = 0;
		clock_t start = clock();

		do
		{
			repetitions++;
		}while (clock() - start <= 100000);

		duration = ((double) (clock() - start))
							/CLOCKS_PER_SEC;
		duration /= repetitions;
		fprintf(fp,"%d,%ld,%lf\n",n, repetitions, duration);
		if(n == 100) step = 100;
		if(n == 1000) step = 1000;
		if(n == 10000) step = 10000;
	}
}

//update

#include <stdio.h>
#include <time.h>

#define MAX_SIZE 1001

void sort(int a[], int n);
int main(void)
{
	int i, n, step = 10;

	int a[MAX_SIZE];
	double duration;
	clock_t start = clock();

	FILE * fp =fopen("output.csv","w");
	fprintf(fp,"n,repetitions,time\n");

	for (n = 0; n <= 1000; n += step)
	{
		long repetitions = 0;

		
		do
		{
			// initialize with worst-case data
			for(i = 0; i < n; i++)
				a[i] = n - i;
				
			repetitions++;

			sort(a, n);

		}while (clock() - start <= 1000);
		
		duration = ((double) (clock() - start))
							/CLOCKS_PER_SEC;
		duration /= repetitions;
		fprintf(fp,"%d,%ld,%lf\n",n, repetitions, duration);
		if(n == 100) step = 100;
	}
}

void sort(int a[], int n){
	
	int i, j;
	int t;
   for (i=0; i<n-1; i++){
      for (j=i+1; j<n; j++){
         if (a[i] > a[j]){
            t = a[i];
            a[i] = a[j];
            a[j] = t;
         }
      }
	}
}
